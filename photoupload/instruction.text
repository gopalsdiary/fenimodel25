if photo available on image db, then show the image & upload

image bb upload and supabase update

	// Imgbb config
const IMGBB_API_KEY = '4d2cdd03bb1da4404f875c22f0bfdf31';
	const IMGBB_UPLOAD_URL = 'https://api.imgbb.com/1/upload';
	const IMGBB_ALBUM = 'student_photo';

	// Supabase config (reads student_database.student_photo_url per iid)
	const supabaseUrl = 'https://rtfefxghfbtirfnlbucb.supabase.co';
	const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ0ZmVmeGdoZmJ0aXJmbmxidWNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA1MDg3OTcsImV4cCI6MjA1NjA4NDc5N30.fb7_myCmFzbV7WPNjFN_NEl4z0sOmRCefnkQbk6c10w';
	const tableName = 'student_database';

	from superbase show > iid, active_class, active_section, active_roll student_name_en, father_name_en, student_photo_url 
	*add a photo upload button. When clicked, it should open a file input dialog to select an image file.
	*Once an image is selected, display a cropping interface that allows the user to crop the image to a square aspect ratio.
	*After cropping, upload the cropped image to imgbb using the provided API key and album name.
	*After a successful upload, get the image URL from imgbb and update the corresponding record in the supabase database with the new image URL.
	*Display a success message once the image is uploaded and the database is updated. Handle any errors that may occur during the upload or database update process and display appropriate error messages to the user.


API version 1
Imgbb's API v1 allows to upload pictures.
Api key : 4d2cdd03bb1da4404f875c22f0bfdf31 

photo will upload in Album name : "student_photo" album  

Photo size : 944 pixel * 1181 pixel - 96dpi 
Avatar-106584230013.jpg       where â€œavatar-*iid.jpg

Example:
Request method
API v1 calls can be done using the POST or GET request methods but since GET request are limited by the maximum allowed length of an URL you should prefer the POST request method.
Image Upload  https://api.imgbb.com/1/upload


API response
API v1 responses display all the image uploaded information in JSON format.
JSON the response will have headers status codes to allow you to easily notice if the request was OK or not. It will also output the status properties.




Example response (JSON)


{
  "data": {
    "id": "2ndCYJK",
    "title": "avatar-106584230013.jpg",
    "url_viewer": "https://ibb.co/2ndCYJK",
    "url": "https://i.ibb.co/w04Prt6/avatar-106584230013.jpg",
    "display_url": "https://i.ibb.co/98W13PY/avatar-106584230013.jpg",
    "time": "1552042565",
    "expiration":"0",
    "image": {
      "filename": "avatar-106584230013.jpg",
      "url": "https://i.ibb.co/avatar-106584230013.jpg",
    },
  },
  "success": true,
  "status": 200
}


 


